{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likeCounts","MyPosts","React","memo","postsElements","posts","map","p","index","postsBlock","MyPostsFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","requared","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusProfile","type","ProfileInfo","profile","descriptionBlock","photos","large","pfofileName","fullName","Profile","ProfileContainer","userId","this","match","params","authorizedUser","history","push","getProfile","getStatusProfile","Component","compose","withAuthRedurect","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.2129688d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__WY-jr\",\"pfofileName\":\"ProfileInfo_pfofileName__1I122\",\"profileStatus\":\"ProfileInfo_profileStatus__3hnzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3B4R5\",\"posts\":\"MyPosts_posts__3Sied\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3I8yo\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://i.pinimg.com/564x/0f/ad/d5/0fadd5465b3520e06f61d69a951ae60d.jpg\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span> {props.likeCounts}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requared } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../cammon/FormsControl/formsControl\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p,index) => (\r\n    <Post key={index} message={p.message} likeCounts={p.likeCounts} />\r\n  ));\r\n\r\n  let addPostValues = (values) => {\r\n    props.addPost(values.newPostText);\r\n    values.newPostText = ''\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={s.postsBlock}>\r\n          <h3>My post</h3>\r\n        </div>\r\n        <MyPostsFormRedux onSubmit={addPostValues} />\r\n        <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n \r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder=\"Enter your post\"\r\n          validate={[requared,maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet MyPostsFormRedux = reduxForm({ form: \"profileMyPostsForm\" })(MyPostsForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => dispatch(addPostActionCreator(newPostText)),\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const activedEdit = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivedEdit = () => {\r\n    setEditMode(false);\r\n    props.updateStatusProfile(status);\r\n  };\r\n  const onChangeStatus = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  },[props.status]);\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span className={s.profileStatus} onDoubleClick={activedEdit}>{props.status || \"--------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onChangeStatus}\r\n            autoFocus\r\n            onBlur={deactivedEdit}\r\n            value={status}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from \"react\";\r\nimport Preloder from \"../../cammon/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloder />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"\" />\r\n        <ProfileStatusWithHook\r\n          status={props.status}\r\n          updateStatusProfile={props.updateStatusProfile}\r\n        />\r\n        <p className={s.pfofileName}>{props.profile.fullName}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedurect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  getProfile,\r\n  getStatusProfile,\r\n  updateStatusProfile,\r\n} from \"../../redux/profile_reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUser;\r\n      if(!userId){\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatusProfile(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatusProfile={updateStatusProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUser: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  withAuthRedurect,\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    getProfile,\r\n    getStatusProfile,\r\n    updateStatusProfile,\r\n  })\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}